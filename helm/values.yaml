gohelm:
  ## The name of the gohelm daemonset or deployment.
  ## Autogenerated if not set or set to "".
  # name:  gohelm

  kind: deployment

  ## Enables the pods to use the host's network namespace.
  hostNetwork: false

  image:
    ## The image repository of the gohelm
    repository: adefemi171/gohelm 
    # repository: adefemi171/web-api

    ## The tag of the gohelm image.
    # tag: "latest"

    ## The pull policy for the gohelm image.
    # pullPolicy: Never
    pullPolicy: IfNotPresent
  
  port: 8080

  ## The termination grace period of the gohelm pod.
  terminationGracePeriodSeconds: 30

  ## The resources of the gohelm pods.
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 64Mi
    # requests:
    #   cpu: 100m
    #   memory: 64Mi

  ## The volumes of the gohelm pods.
  volumes: []
  # - name: extra-conf
  #   configMap:
  #     name: extra-conf

  ## The volumeMounts of the gohelm pods.
  volumeMounts: []

  ## The number of replicas of the gohelm deployment.
  replicaCount: 1

  serviceAccount:
    ## The name of the service account of the gohelm pods. Used for RBAC.
    ## Autogenerated if not set or set to "".
    # name: gohelm

    ## Deprecated and will be removed in KIC v1.10, use gohelm.serviceAccount.imagePullSecretName instead.
    ## The names of the secrets containing docker registry credentials.
    imagePullSecrets: []
      # - name: secret_name

    ## The name of the secret containing docker registry credentials.
    ## Secret must exist in the same namespace as the helm release.
    imagePullSecretName: ""

  pod:
    ## The annotations of the gohelm pod.
    annotations: {}



prometheus:
  ## Expose App metrics in the Prometheus format.
  create: true

  ## Configures the port to scrape the metrics.
  port: 9110


rbac:
  ## Configures RBAC.
  create: true

service:
  ## Creates a service to expose the gohelm pods.
  create: true

  name: "gohelm"

  ## The type of service to create for the gohelm.
  type: ClusterIP

  ## The externalTrafficPolicy of the service. The value Local preserves the client source IP.
  externalTrafficPolicy: Local

  ## The annotations of the gohelm service.
  annotations: {}

  ## The static IP address for the load balancer. Requires gohelm.service.type set to LoadBalancer. The cloud provider must support this feature.
  loadBalancerIP: ""

  ## The list of external IPs for the gohelm service.
  externalIPs: []

  ## The IP ranges (CIDR) that are allowed to access the load balancer. Requires gohelm.service.type set to LoadBalancer. The cloud provider must support this feature.
  loadBalancerSourceRanges: []

  ## The name of the service
  ## Autogenerated if not set or set to "".
  # name: gohelm

  httpPort:
    enable: true
    ## The HTTP port of the gohelm service.
    port: 8080
    targetPort: 8080


  prometheus:
    enable: true
    ## The HTTP port of the front service.
    port: 9110

    targetPort: 9110

  ## A list of custom ports to expose through the gohelm service. Follows the conventional Kubernetes yaml syntax for service ports.
  customPorts: []

ingress:
  enabled: true
  host: ""
  annotations: {}
  tls:
    ## enable TLS termination for the web Ingress
    ##
    enabled: false

    secretName: ""
